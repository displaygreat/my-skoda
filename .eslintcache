[{"C:\\Users\\oxana\\Desktop\\my-skoda\\src\\index.js":"1","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\App.js":"2","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\reportWebVitals.js":"3","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\pages\\HomePage.js":"4","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\pages\\SheduleServicePage.js":"5","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\pages\\LoginPage.js":"6","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\pages\\SignupPage.js":"7","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\pages\\SignupLicensePage.js":"8","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\pages\\MySkodaPage.js":"9","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\components\\MySkodaNavbar\\MySkodaNavbar.js":"10","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\models\\UserModel.js":"11","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\components\\MySkodaFooter\\MySkodaFooter.js":"12","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\components\\ServiceCalendar\\ServiceCalendar.js":"13","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\components\\SheduleService\\SheduleService.js":"14","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\components\\MySkodaData\\MySkodaData.js":"15","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\components\\MySkodaService\\MySkodaService.js":"16"},{"size":499,"mtime":1613332481460,"results":"17","hashOfConfig":"18"},{"size":3022,"mtime":1613412815662,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":1589,"mtime":1613413564824,"results":"21","hashOfConfig":"18"},{"size":1082,"mtime":1612099145477,"results":"22","hashOfConfig":"18"},{"size":6056,"mtime":1613414417012,"results":"23","hashOfConfig":"18"},{"size":5553,"mtime":1613303604704,"results":"24","hashOfConfig":"18"},{"size":3860,"mtime":1613303338504,"results":"25","hashOfConfig":"18"},{"size":2309,"mtime":1613303853236,"results":"26","hashOfConfig":"18"},{"size":2038,"mtime":1613306758426,"results":"27","hashOfConfig":"18"},{"size":268,"mtime":1611752869073,"results":"28","hashOfConfig":"18"},{"size":767,"mtime":1613411740267,"results":"29","hashOfConfig":"18"},{"size":2145,"mtime":1613156543060,"results":"30","hashOfConfig":"18"},{"size":15203,"mtime":1613304596101,"results":"31","hashOfConfig":"18"},{"size":6386,"mtime":1613304208195,"results":"32","hashOfConfig":"18"},{"size":4891,"mtime":1612101616338,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1io2muu",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\oxana\\Desktop\\my-skoda\\src\\index.js",[],["73","74"],"C:\\Users\\oxana\\Desktop\\my-skoda\\src\\App.js",[],"C:\\Users\\oxana\\Desktop\\my-skoda\\src\\reportWebVitals.js",[],"C:\\Users\\oxana\\Desktop\\my-skoda\\src\\pages\\HomePage.js",[],"C:\\Users\\oxana\\Desktop\\my-skoda\\src\\pages\\SheduleServicePage.js",[],"C:\\Users\\oxana\\Desktop\\my-skoda\\src\\pages\\LoginPage.js",["75"],"C:\\Users\\oxana\\Desktop\\my-skoda\\src\\pages\\SignupPage.js",["76"],"import React from 'react';\r\nimport { Container, Button, Col, Image, Nav, Row, Form } from 'react-bootstrap';\r\nimport './SignupPage.css';\r\nimport Parse from 'parse';\r\nimport MySkodaFooter from '../components/MySkodaFooter/MySkodaFooter';\r\nimport skodaLogo from '../assets/img/skoda-logo.png';\r\nimport skodaSignup from '../assets/img/skoda-signup.jpg';\r\nimport eye from '../assets/img/eye.png';\r\nimport eyeOff from '../assets/img/eye-off.png';\r\n\r\nclass SignupPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      type: \"password\",\r\n      offPwd: 'show',\r\n      onPwd: 'hide',\r\n      newUserPwd: '',\r\n      confirmUserPwd: '',\r\n      showAlert: true\r\n    }\r\n  }\r\n\r\n  showPassword = () => {\r\n    this.setState({\r\n      type: \"text\",\r\n      offPwd: 'hide',\r\n      onPwd: 'show'\r\n    })\r\n  }\r\n\r\n  hidePassword = () => {\r\n    this.setState({\r\n      type: \"password\",\r\n      offPwd: 'show',\r\n      onPwd: 'hide'\r\n    })\r\n  }\r\n\r\n  handleClickOnBackButton() {\r\n    window.location = '#/signup-license';\r\n  }\r\n\r\n  handleChangeInputPwd = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      newUserPwd: e.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeConfirmPwd = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      confirmUserPwd: e.target.value\r\n    });\r\n  }\r\n\r\n  isTheSameValue = () => {\r\n    let newUserPwd = this.state.newUserPwd.toString();\r\n    let confirmUserPwd = this.state.confirmUserPwd.toString();\r\n    if(newUserPwd === confirmUserPwd) {\r\n       window.location = '#/my-skoda';\r\n      //  this.props.callbackUserPwd(this.state.newUserPwd);\r\n       this.signupUser();\r\n    }\r\n    this.setState({\r\n      showAlert: false,\r\n      newUserPwd: '',\r\n      confirmUserPwd: ''\r\n    })\r\n  }\r\n\r\n  signupUser = () => {\r\n    //!write condition if user or vehicle exist in database\r\n    console.log(this.state.sendUserCarPlate);\r\n    const user = new Parse.User()\r\n    user.set('username', this.props.sendUserEmail);\r\n    user.set('email', this.props.sendUserEmail);\r\n    user.set('password', this.state.newUserPwd);\r\n    user.set('plateNumber', this.props.sendUserCarPlate)\r\n\r\n    user.signUp().then((user) => {\r\n      \r\n      console.log('User signed up', user);\r\n    }).catch(error => {\r\n      \r\n      console.error('Error while signing up user', error);\r\n      //write if error alert\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"c-welcome-page\">\r\n        <div className=\"main\">\r\n        <Container>\r\n          <Row className=\"\">\r\n            <Col className=\"column column-aside\" xs={12} md={4}>\r\n              <div className=\"alert alert-warning alert-wrap\" role=\"alert\" hidden={this.state.showAlert}>\r\n                <p className=\"alert-text\">The fields are not the same</p>\r\n                  <button className=\"button-close\" onClick={() => this.setState({showAlert: true})} >\r\n                    &#215;  \r\n                  </button>\r\n              </div>\r\n              <span className=\"myskoda-welcome-label\">my<span className=\"letter-green\">Skoda</span></span>\r\n              <h4 className=\"welcome-title\">Create account</h4>\r\n              <span className=\"step\">Step 2</span>\r\n              <p className=\"text\">for My Skoda</p>\r\n              <Form>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <div className=\"input-password\">\r\n                    <Form.Control type={this.state.type} placeholder=\"Password\" onChange={this.handleChangeInputPwd} value={this.state.newUserPwd} />\r\n                    <Image className={`icon-eye-off ${this.state.offPwd}`} src={eyeOff} onClick={this.showPassword} />\r\n                    <Image className={`icon-eye ${this.state.onPwd}`}  src={eye} onClick={this.hidePassword} />\r\n                  </div>\r\n                  <Form.Text className=\"text-muted\">\r\n                    Perfect\r\n                  </Form.Text>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Confirm password</Form.Label>\r\n                  <div className=\"input-password\">\r\n                    <Form.Control type={this.state.type} placeholder=\"Password\" onChange={this.handleChangeConfirmPwd} value={this.state.confirmUserPwd} />\r\n                    <Image className={`icon-eye-off ${this.state.offPwd}`} src={eyeOff} onClick={this.showPassword} />\r\n                    <Image className={`icon-eye ${this.state.onPwd}`}  src={eye} onClick={this.hidePassword} />\r\n                  </div>\r\n                  <Form.Text className=\"text-muted\">\r\n                    Perfect\r\n                  </Form.Text>\r\n                </Form.Group>\r\n                <div className=\"prev-next-buttons\">\r\n                  <Button className=\"login-button btn-prev\" variant=\"outline-success\" onClick={this.handleClickOnBackButton}>Back</Button>\r\n                  <Button className=\"login-button btn-next\" variant=\"success\" onClick={this.isTheSameValue}>Next\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </Col>\r\n            <Col className=\"column column-aside\" xs={12} md={8}>\r\n              <Image className=\"logo welcome-logo\" src={skodaLogo} rounded />\r\n              <div className=\"wrap-welcome-img\">\r\n                <Image className=\"home-img\" src={skodaSignup} rounded />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          </Container>\r\n          </div>\r\n          <MySkodaFooter />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default SignupPage;","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\pages\\SignupLicensePage.js",["77","78"],"import React from 'react';\r\nimport { Container, Button, Col, Image, Nav, Row, Form } from 'react-bootstrap';\r\nimport './SignupLicensePage.css';\r\nimport MySkodaFooter from '../components/MySkodaFooter/MySkodaFooter';\r\nimport skodaLogo from '../assets/img/skoda-logo.png';\r\nimport skodaSignup from '../assets/img/skoda-signup.jpg';\r\n\r\n\r\nclass SignupLicensePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userEmail: '',\r\n      userCarPlate: ''\r\n    }\r\n  }\r\n\r\n  handleClickOnBackButton() {\r\n    window.location = '#/login';\r\n  }\r\n\r\n  handleChangeInputPlate = (e) => {\r\n     e.preventDefault();\r\n     this.setState({\r\n       userCarPlate: e.target.value\r\n     })\r\n  }\r\n\r\n   handleChangeInputEmail = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      userEmail: e.target.value\r\n    });\r\n  }\r\n  \r\n  getVehicle = async (e) => {\r\n    e.preventDefault();\r\n    let sentPlate = this.state.userCarPlate;\r\n    let sentEmail = this.state.userEmail\r\n    const apiUrl = await fetch(`https://data.gov.il/api/3/action/datastore_search?resource_id=053cea08-09bc-40ec-8f7a-156f0677aff3&filters={%22mispar_rechev%22:[%22${sentPlate}%22]}`);\r\n\r\n    const data = await apiUrl.json();\r\n    console.log(data);\r\n    let receivedPlate = data.result.records[0].mispar_rechev;\r\n    if(receivedPlate == sentPlate) {\r\n      this.props.callbackUserCarPlate(sentPlate);\r\n      this.props.callbackUserEmail(sentEmail);\r\n      window.location = '#/signup';\r\n    }\r\n    //!!write if this car plate not exists in database of data.gov.il (alert) + if this car plate exists in database back4app + validation input email RegEx (alert if not valid)\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"c-welcome-page\">\r\n        <div className=\"main\">\r\n        <Container>\r\n          <Row>\r\n            <Col className=\"column column-aside\" xs={12} md={4}>\r\n              <span className=\"myskoda-welcome-label\">my<span className=\"letter-green\">Skoda</span></span>\r\n              <h4 className=\"welcome-title\">Create account</h4>\r\n              <span className=\"step\">Step 1</span>\r\n              <p className=\"text\">for My Skoda</p>\r\n              <Form>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>License plate number</Form.Label>\r\n                  <Form.Control type=\"text\" placeholder=\"License plate number\" onChange={this.handleChangeInputPlate} />\r\n                  <Form.Text className=\"text-muted\">\r\n                    Perfect\r\n                  </Form.Text>\r\n                </Form.Group>\r\n                <Form.Group className=\"login-input\"controlId=\"formBasicEmail\">\r\n                  <Form.Label>Email address</Form.Label>\r\n                  <Form.Control type=\"email\" placeholder=\"Enter email\" value={this.state.userEmail} onChange={this.handleChangeInputEmail}/>\r\n                  <Form.Text className=\"text-muted\">\r\n                    Perfect\r\n                  </Form.Text>\r\n                </Form.Group>\r\n                <div className=\"prev-next-buttons\">\r\n                  <Button className=\"login-button btn-prev\" variant=\"outline-success\" onClick={this.handleClickOnBackButton}>Back</Button>\r\n                  <Button className=\"login-button btn-next\" variant=\"success\" onClick={this.getVehicle}>Next\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </Col>\r\n            <Col className=\"column column-aside\" xs={12} md={8}>\r\n              <Image className=\"logo welcome-logo\" src={skodaLogo}rounded />\r\n              <div className=\"wrap-welcome-img\">\r\n                <Image className=\"home-img\" src={skodaSignup} rounded />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          </Container>\r\n          </div>\r\n          <MySkodaFooter />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default SignupLicensePage;","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\pages\\MySkodaPage.js",["79"],"import './MySkodaPage.css';\r\nimport React from 'react';\r\nimport { Container, Nav } from 'react-bootstrap';\r\nimport ServiceCalendar from '../components/ServiceCalendar/ServiceCalendar';\r\nimport MySkodaService from '../components/MySkodaService/MySkodaService';\r\nimport MySkodaData from '../components/MySkodaData/MySkodaData';\r\nimport MySkodaNavbar from '../components/MySkodaNavbar/MySkodaNavbar';\r\nimport MySkodaFooter from '../components/MySkodaFooter/MySkodaFooter';\r\n\r\nclass MySkodaPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(this.props);\r\n    this.state = {\r\n      userId: this.props.sendUserId,\r\n      userCarPlate: this.props.sendUserCarPlate,\r\n      userLastTest: ''\r\n    }\r\n    console.log(this.state);\r\n  }\r\n\r\n  handleCallbackUserLastTest = (test) => {\r\n    this.setState({\r\n      userLastTest: test\r\n    });\r\n    console.log(this.state);\r\n  }\r\n\r\n  //check for if this plate number exists\r\n  // getAllPlateNumbers = () => {\r\n  //   const user = Parse.Object.extend(\"User\");\r\n\r\n  //   // Creates a new Query object to help us fetch MyCustomClass objects\r\n  //   const query = new Parse.Query(user);\r\n\r\n  //   // Executes the query, which returns an array of MyCustomClass\r\n  //   query.find().then(results => {\r\n  //     console.log(results);\r\n  //     console.log(`ParseObjects found: ${JSON.stringify(results)}`);\r\n  //     for(let i=0; i<results.length; i++) {\r\n\r\n  //     let plateNumber = results[i].attributes.plateNumber;\r\n  //     console.log(plateNumber);\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // handleLogout = () => {\r\n  //   this.setState({\r\n  //     userId: '',\r\n  //     userEmail: '',\r\n  //     userCarPlate: '',\r\n  //     userPwd: '',\r\n  //     activeUser: null\r\n  //   })\r\n  // }\r\n\r\n  render() {\r\n    console.log(this.state.carTest, this.state.carMake);\r\n    return(\r\n      <div className=\"c-my-skoda-page\">\r\n         <MySkodaNavbar />\r\n        <Container className=\"myskoda-wrap\">\r\n        <MySkodaData sendUserCarPlate={this.state.userCarPlate} callbackUserLastTest={this.handleCallbackUserLastTest}/>\r\n        <MySkodaService sendUserCarPlate={this.state.userCarPlate} sendUserId={this.state.userId}/>\r\n        <ServiceCalendar />\r\n      </Container>\r\n       <MySkodaFooter />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default MySkodaPage;","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\components\\MySkodaNavbar\\MySkodaNavbar.js",["80"],"import React from 'react';\r\nimport { Nav, Navbar, Container } from 'react-bootstrap';\r\nimport './MySkodaNavbar.css';\r\nimport skodaLogo from '../../assets/img/skoda-logo.png';\r\n\r\n\r\nclass MySkodaNavbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  logOut = () => {\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div class=\"myskoda-navbar\">\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"light\">\r\n          <Container>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link className=\"myskoda-label-link\" href=\"#\"><span className=\"myskoda-label\">my<span className=\"letter-green\">Skoda</span></span></Nav.Link>\r\n              <Navbar.Brand href=\"#\">\r\n                <img\r\n                  src={skodaLogo}\r\n                  width=\"30\"\r\n                  height=\"30\"\r\n                  className=\"d-inline-block align-top\"\r\n                  alt=\"skoda logo\"\r\n                />\r\n              </Navbar.Brand>\r\n              <Nav.Link className=\"myskoda-nav-link\" href=\"#/dealers\">Service Centers</Nav.Link>\r\n              <Nav.Link className=\"myskoda-nav-link\" href=\"#/shedule\">Schedule Service</Nav.Link>\r\n            </Nav>\r\n            <Nav className=\"align-items-center\">\r\n              <Nav.Link className=\"myskoda-nav-link user-avatar-link d-flex align-items-center\" href=\"#/account\">\r\n                <span>Oxana</span>\r\n                <div className=\"wrap-user-avatar\">\r\n                  <img className=\"user-avatar\" src=\"https://via.placeholder.com/150/92c952\" />\r\n                </div>\r\n              </Nav.Link>\r\n              <Nav.Link className=\"myskoda-nav-link\" href=\"#\" onClick={this.logOut}>\r\n                LogOut\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MySkodaNavbar;","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\models\\UserModel.js",[],"C:\\Users\\oxana\\Desktop\\my-skoda\\src\\components\\MySkodaFooter\\MySkodaFooter.js",["81"],"C:\\Users\\oxana\\Desktop\\my-skoda\\src\\components\\ServiceCalendar\\ServiceCalendar.js",["82"],"import './ServiceCalendar.css';\r\nimport React from 'react';\r\nimport { Col } from 'react-bootstrap';\r\nimport servicesJSON from '../../data/services.json';\r\nimport moment from 'moment';\r\n// import 'animate.css/animate.css';\r\n// import Animate from 'animate.css-react';\r\n\r\n\r\nclass ServiceCalendar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userId: this.props.sendUserId,\r\n      userCarPlate: this.props.sendUserCarPlate,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const table = servicesJSON;\r\n    console.log(table);\r\n    \r\n    const sortedTable = table.sort((a, b) => {\r\n      let dateA=new Date(a.recommended.split(\"/\").reverse().join(\"-\")), dateB=new Date(b.recommended.split(\"/\").reverse().join(\"-\"))\r\n      return dateA-dateB\r\n    });\r\n    console.log(sortedTable);\r\n    const newTable = sortedTable.map((service) => {\r\n        return (\r\n          <tr>\r\n            <th className=\"service-cell\"><small>recommended</small><br/>{service.recommended}</th>\r\n            <td className=\"service-cell\">{service.service}</td>\r\n            <td className=\"service-cell\"><small>shedule</small><br/><a className=\"shedule-link\" href=\"#/shedule\">{service.shedule}</a></td>\r\n          </tr>\r\n        )\r\n    })\r\n\r\n    return(\r\n     <div class=\"c-myskoda-service\">\r\n        <h1 className=\"display-4 myskoda-title\" onClick={this.sortDates}>Service Calendar</h1>\r\n        <Col className=\"column\" xs={12} md={4}>\r\n              <p class=\"text-regular\">Keep Your Skoda At Its Best with Our Service</p>\r\n              <span className=\"text-small\">Scheduled maintenance can saving you lots in the long run</span>\r\n              <table class=\"table table-success table-striped table-bordered\" style={{ width: '397px' }}>\r\n                <tr className=\"table-secondary\">\r\n                    <th className=\"service-cell\" scope=\"row\">Visit</th>\r\n                    <th className=\"service-cell\">Service</th>\r\n                    <th className=\"service-cell\">Shedule</th>\r\n                  </tr>\r\n                {newTable}\r\n              </table>\r\n        </Col>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default ServiceCalendar;","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\components\\SheduleService\\SheduleService.js",["83","84","85","86","87"],"import './SheduleService.css';\r\nimport React from 'react';\r\nimport { Button, Col, Image } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport DatePicker from \"react-datepicker\";\r\nimport subDays from 'date-fns/subDays';\r\nimport getDay from 'date-fns/getDay';\r\nimport setHours from 'date-fns/setHours';\r\nimport setMinutes from 'date-fns/setMinutes';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport styled from \"styled-components\";\r\nimport Parse from 'parse';\r\nimport superb from '../../assets/img/superb.jpg';\r\nimport octavia from '../../assets/img/octavia.jpg';\r\nimport karoq from '../../assets/img/karoq.jpg';\r\n\r\nconst Styles = styled.div`\r\n.react-datepicker__input-container input,\r\n.react-datepicker__input-container,\r\n.react-datepicker-wrapper {\r\n  width: 290px;\r\n  height: 38px;\r\n  margin-bottom: 30px;\r\n}\r\n .react-datepicker__close-icon::before,\r\n .react-datepicker__close-icon::after {\r\n    background-color: #28a745;\r\n }\r\n .react-datepicker__time-container,\r\n .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\r\n   width: 240px;\r\n }\r\n .react-datepicker__day--keyboard-selected,\r\n .react-datepicker__day--selected {\r\n    background-color: #218838;\r\n }\r\n .react-datepicker__day--keyboard-selected:hover,\r\n .react-datepicker__day--selected:hover {\r\n    background-color: #218838;\r\n }\r\n .react-datepicker__day--keyboard-selected:focus,\r\n .react-datepicker__day--selected:focus {\r\n    outline: none;\r\n }\r\n .react-datepicker__header {\r\n    background-color: rgb(41, 168, 71, 0.2);\r\n }\r\n .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list li.react-datepicker__time-list-item--selected {\r\n   background-color: #218838;\r\n }\r\n .react-datepicker__time-container:hover .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list li.react-datepicker__time-list-item--selected {\r\n   background-color: #218838;\r\n }\r\n .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list li.react-datepicker__time-list-item--selected,\r\n .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list li.react-datepicker__time-list-item\r\n {\r\n   height: 50px;\r\n   display: flex;\r\n   align-items: center;\r\n   justify-content: center;\r\n }\r\n`;\r\n\r\nclass SheduleService extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        userId: this.props.sendUserId,\r\n        carMake: '',\r\n        carModel: '',\r\n        carYear: '',\r\n        carLastTest: '',\r\n        carLastService: '',\r\n        startDate: setHours(setMinutes(new Date(), 0), 8),\r\n        excludeTimes: [],\r\n        showErrorEmail: '',\r\n        setShow: false\r\n      }\r\n  }\r\n\r\n  componentDidMount () {\r\n    let plate = this.props.sendUserCarPlate;\r\n    // console.log(plate);\r\n    axios.get(`https://data.gov.il/api/3/action/datastore_search?resource_id=053cea08-09bc-40ec-8f7a-156f0677aff3&filters={%22mispar_rechev%22:[%22${plate}%22]}`)\r\n    .then((result) => {\r\n      let data = result.data.result.records[0];\r\n      // console.log(data);\r\n      let make = data.tozeret_nm;\r\n      if(make === `סקודה צ'כיה`) {\r\n        make = \"Skoda\"\r\n      }\r\n      let model = data.kinuy_mishari;\r\n      let year = data.shnat_yitzur;\r\n      let test = moment(data.mivchan_acharon_dt).format('DD/MM/YYYY');\r\n      // console.log(make, model, year, test);\r\n      this.setState({\r\n        carPlate: plate,\r\n        carMake: make,\r\n        carModel: model,\r\n        carYear: year,\r\n        carLastTest: test,\r\n        email: '',\r\n        phone: ''\r\n      })\r\n      // console.log(this.state);\r\n    })\r\n\r\n    //get last inspection from databse User\r\n    const User = new Parse.User();\r\n    const query = new Parse.Query(User);\r\n    query.get(this.state.userId).then((user) => {\r\n      console.log(user);\r\n      const lastInspection = user.attributes.lastInspection;\r\n      this.setState({\r\n        carLastService: lastInspection\r\n      })\r\n\r\n    }, (error) => {\r\n      \r\n      console.error('Error while fetching Vehicle', error);\r\n    });\r\n\r\n    //get sheduled dates and times from database Shedule\r\n    const Shedule = Parse.Object.extend('Shedule');\r\n    const queryDate = new Parse.Query(Shedule);\r\n\r\n    queryDate.find().then((results) => {\r\n      \r\n      console.log('Shedule found', results);\r\n    }, (error) => {\r\n      \r\n      console.error('Error while fetching Shedule', error);\r\n    });\r\n    \r\n  }\r\n\r\n  handleChangeInputEmail = (e) => {\r\n    this.setState({\r\n      email: e.target.value\r\n    })\r\n  } \r\n  handleChangeInputPhone = (e) => {\r\n    this.setState({\r\n      phone: e.target.value\r\n    })\r\n  }\r\n\r\n  handleChange = date => {\r\n    this.setState({\r\n      startDate: date\r\n    });\r\n    console.log(this.state.startDate);\r\n  }\r\n\r\n  handleSelect = (date, event) => {\r\n    console.log('onSelect', date, event);\r\n    const selectedDate = moment(date).format('YYYY/MM/DD');\r\n    console.log(selectedDate);\r\n    const transDate = moment(selectedDate).toObject();\r\n    console.log(transDate);\r\n\r\n    const Shedule = Parse.Object.extend('Shedule');\r\n    const query = new Parse.Query(Shedule);\r\n  \r\n    query.find().then((results) => {\r\n      console.log(results);\r\n      let arrDates = [];\r\n      for (let i=0; i<results.length; i++) {\r\n         arrDates.push(results[i].attributes.sheduledDate);\r\n       }\r\n       console.log(arrDates);\r\n\r\n      let arrExcludeDates = [];\r\n      for (let i=0; i<arrDates.length; i++) {\r\n        if (moment(date).format('YYYY/MM/DD') === moment(arrDates[i]).format('YYYY/MM/DD')) {\r\n          arrExcludeDates.push(moment(Date.parse(arrDates[i])).toObject());\r\n          console.log(arrExcludeDates);\r\n        }\r\n      }\r\n      \r\n      let arrExcludeTimes = [];\r\n        for (let j=0; j<arrExcludeDates.length; j++) {\r\n          arrExcludeTimes.push(setHours(setMinutes(new Date(), arrExcludeDates[j].minutes), arrExcludeDates[j].hours))\r\n          console.log(arrExcludeTimes);\r\n\r\n          this.setState({\r\n            excludeTimes: arrExcludeTimes\r\n          })\r\n          console.log(this.state);\r\n        }\r\n\r\n    }, (error) => {\r\n      \r\n      console.error('Error while fetching Shedule', error);\r\n    });\r\n  }\r\n\r\n  handleClickOnButtonSubmit = (e) => {\r\n    \r\n    e.preventDefault();\r\n    console.log(this.state.startDate);\r\n    const Shedule = Parse.Object.extend('Shedule');\r\n    const myNewObject = new Shedule();\r\n\r\n    myNewObject.set('sheduledDate', this.state.startDate.toString());\r\n    myNewObject.set('userId', Parse.User.current());\r\n\r\n    myNewObject.save().then(\r\n      (result) => {\r\n        \r\n        console.log('Shedule created', result);\r\n      },\r\n      (error) => {\r\n        \r\n        console.error('Error while creating Vehicle: ', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      setShow: false\r\n    })\r\n  }\r\n\r\n  handleShow = () => {\r\n    this.setState({\r\n      setShow: true\r\n    })\r\n  }\r\n  \r\n  //validation email\r\n  // validationEmail = (e) => {\r\n  //    var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n  //   if (!pattern.test(e.target.value)) {\r\n  //           this.setState({\r\n  //             showErrorEmail: 'is-invalid'\r\n  //           })\r\n  //           this.setState({\r\n  //             showErrorEmail: 'is-valid'\r\n  //           })\r\n  //       }\r\n  // }\r\n\r\n  render() {\r\n    const { startDate } = this.state;\r\n     \r\n    return(\r\n      <div>\r\n        <div className=\"d-flex\">\r\n          <Col className=\"column\" style={{maxWidth: \"max-content\"}} xs={12} md={4}>\r\n            <h1 className=\"display-4 myskoda-title ml-0\">Shedule Service Appointment</h1>\r\n            <p className=\"text-regular text-bg last ml-0\">your last annual vehicle licensing test: <strong>{this.state.carLastTest}</strong></p>\r\n        <p className=\"text-regular text-bg last ml-0\">your last multi-point inspection: <strong>{this.state.carLastService}</strong></p>\r\n          <form className=\"row g-3 shedule-form\">\r\n          \r\n            <div class=\"col-md-6\">\r\n              <label for=\"validationServer01\" className=\"form-label\">PlateNumber</label>\r\n              <input type=\"text\" className=\"form-control is-valid\" id=\"validationServer01\" value={this.props.sendUserCarPlate} required disabled/>\r\n              {/* <div class=\"valid-feedback\">\r\n                Looks good!\r\n              </div> */}\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <label for=\"validationServer02\" className=\"form-label\">Model</label>\r\n              <input type=\"text\" className=\"form-control is-valid\" id=\"validationServer02\" value={this.state.carModel} required />\r\n              {/* <div class=\"valid-feedback\">\r\n                Looks good!\r\n              </div> */}\r\n            </div>\r\n\r\n            <div class=\"col-md-12\">\r\n              <label for=\"validationServer04\" className=\"form-label shedule-label\">Dealer</label>\r\n              <select className={`form-select shedule-select ${this.state.showError}`} id=\"validationServer04\" aria-describedby=\"validationServer04Feedback\" required>\r\n                <option selected disabled value=\"\">Choose dealer</option>\r\n                <option>Felix Oficial Dealer Tel-Aviv</option>\r\n                <option>HaGoren Oficial Dealer Nataniya</option>\r\n                <option>MotorUp Oficial Dealer Petach-Tikva</option>\r\n              </select>\r\n              <div id=\"validationServer04Feedback\" className=\"invalid-feedback\">\r\n                Please select a dealer.\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-12\">\r\n              <label for=\"validationServer04\" className=\"form-label shedule-label\">Service</label>\r\n              <select className={`form-select shedule-select ${this.state.showError}`} id=\"validationServer04\" aria-describedby=\"validationServer04Feedback\" required>\r\n                <option selected disabled value=\"\">Choose services</option>\r\n                <option>Inspection Before Annual Vehicle Licensing Test</option>\r\n                <option>Multi-Point Inspection</option>\r\n                <option>Full service</option>\r\n                <option>Inspection before summer</option>\r\n                <option>Inspection before winter</option>\r\n              </select>\r\n              <div id=\"validationServer04Feedback\" className=\"invalid-feedback\">\r\n                Please select a service.\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-12\">\r\n              <p className=\"mt-2\">Select Date and Time</p>\r\n              <Styles>\r\n                <DatePicker\r\n                isClearable\r\n                selected={startDate}\r\n                onChange={this.handleChange}\r\n                onSelect={this.handleSelect}\r\n                placeholderText=\"Select Date and Time\"\r\n                popperPlacement=\"right-start\"\r\n                popperModifiers={{\r\n                  offset: {\r\n                    enabled: true,\r\n                    offset: \"5px, 10px\"\r\n                  },\r\n                  preventOverflow: {\r\n                    enabled: true,\r\n                    escapeWithReference: false,\r\n                    boundariesElement: \"viewport\"\r\n                  }\r\n                }}\r\n                dateFormat=\"dd/MM/yyy\"\r\n                minDate={new Date()}\r\n              />\r\n              <DatePicker\r\n                isClearable\r\n                selected={startDate}\r\n                onChange={this.handleChange}\r\n                onSelect={this.handleSelect}\r\n                placeholderText=\"Select Date and Time\"\r\n                popperPlacement=\"right-start\"\r\n                popperModifiers={{\r\n                  offset: {\r\n                    enabled: true,\r\n                    offset: \"0px, 10px\"\r\n                  },\r\n                  preventOverflow: {\r\n                    enabled: true,\r\n                    escapeWithReference: false,\r\n                    boundariesElement: \"viewport\"\r\n                  }\r\n                }}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                timeIntervals={15}\r\n                timeFormat=\"HH:mm\"\r\n                // withPortal\r\n                dateFormat=\"hh:mm aa\"\r\n                minDate={new Date()}\r\n                excludeTimes={this.state.excludeTimes}\r\n                minTime={setHours(setMinutes(new Date(), 0), 8)}\r\n                maxTime={setHours(setMinutes(new Date(), 45), 14)}\r\n              />\r\n              </Styles>\r\n            </div>\r\n\r\n            <div class=\"col-md-12\">\r\n              <label for=\"validationServer03\" className=\"col-2 col-form-label pl-0 pt-0\">Email</label>\r\n              <div className=\"col-10 pl-0\">\r\n                <input className={`form-control ${this.state.showErrorEmail}`} style={{backgroundImage: \"none\"}, {borderColor: \"#000\"}} type=\"email\" placeholder=\"example@example.com\" onChange={this.handleChangeInputEmail} value={this.state.email} id=\"validationServer03\" aria-describedby=\"validationServer03Feedback\" required/>\r\n                <div id=\"validationServer03Feedback\" className=\"invalid-feedback\">\r\n                Please provide a valid email.\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-12\">\r\n              <label for=\"validationServer03\" class=\"col-2 col-form-label pl-0\">Telephone</label>\r\n              <div className=\"col-10 pl-0\">\r\n                <input className={`form-control ${this.state.showError}`} style={{backgroundImage: \"none\"}, {borderColor: \"#000\"}} type=\"tel\" placeholder=\"000-000-0000\" onChange={this.handleChangeInputPhone} value={this.state.phone} id=\"validationServer03\" aria-describedby=\"validationServer03Feedback\" required/>\r\n                <div id=\"validationServer03Feedback\" className=\"invalid-feedback\">\r\n                Please provide a valid telephone.\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            \r\n            <div className=\"col-12\">\r\n              <button className=\"btn btn-primary shedule-submit my-4\" type=\"submit\" onClick={this.handleClickOnButtonSubmit}>Submit form</button>\r\n            </div>\r\n          </form> \r\n        </Col>\r\n        <Col className=\"column rounded\" style={{maxWidth: \"max-content\"}} xs={12} md={6}>\r\n          <h3 className=\"title-discount\">Shedule your visit online and get 10% discount for service</h3>\r\n          <div className=\"wrap-shedule-img\">\r\n            <Image src={superb} className=\"shedule-img\" />\r\n          </div>\r\n          <div className=\"wrap-shedule-img\">\r\n            <Image src={octavia} className=\"shedule-img\" />\r\n          </div>\r\n          <div className=\"wrap-shedule-img\" onClick={this.handleShow}>\r\n            <Image src={karoq} className=\"shedule-img\" />\r\n          </div>\r\n        </Col>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default SheduleService;","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\components\\MySkodaData\\MySkodaData.js",[],"C:\\Users\\oxana\\Desktop\\my-skoda\\src\\components\\MySkodaService\\MySkodaService.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":2,"column":41,"nodeType":"94","messageId":"95","endLine":2,"endColumn":44},{"ruleId":"92","severity":1,"message":"93","line":2,"column":41,"nodeType":"94","messageId":"95","endLine":2,"endColumn":44},{"ruleId":"92","severity":1,"message":"93","line":2,"column":41,"nodeType":"94","messageId":"95","endLine":2,"endColumn":44},{"ruleId":"96","severity":1,"message":"97","line":45,"column":22,"nodeType":"98","messageId":"99","endLine":45,"endColumn":24},{"ruleId":"92","severity":1,"message":"93","line":3,"column":21,"nodeType":"94","messageId":"95","endLine":3,"endColumn":24},{"ruleId":"100","severity":1,"message":"101","line":46,"column":19,"nodeType":"102","endLine":46,"endColumn":95},{"ruleId":"103","severity":1,"message":"104","line":7,"column":3,"nodeType":"105","messageId":"106","endLine":9,"endColumn":4},{"ruleId":"92","severity":1,"message":"107","line":5,"column":8,"nodeType":"94","messageId":"95","endLine":5,"endColumn":14},{"ruleId":"92","severity":1,"message":"108","line":3,"column":10,"nodeType":"94","messageId":"95","endLine":3,"endColumn":16},{"ruleId":"92","severity":1,"message":"109","line":7,"column":8,"nodeType":"94","messageId":"95","endLine":7,"endColumn":15},{"ruleId":"92","severity":1,"message":"110","line":8,"column":8,"nodeType":"94","messageId":"95","endLine":8,"endColumn":14},{"ruleId":"111","severity":1,"message":"112","line":360,"column":112,"nodeType":"113","messageId":"114","endLine":360,"endColumn":113},{"ruleId":"111","severity":1,"message":"112","line":370,"column":107,"nodeType":"113","messageId":"114","endLine":370,"endColumn":108},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'moment' is defined but never used.","'Button' is defined but never used.","'subDays' is defined but never used.","'getDay' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]