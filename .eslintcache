[{"C:\\Users\\oxana\\Desktop\\my-skoda\\src\\index.js":"1","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\reportWebVitals.js":"2","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\App.js":"3","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\pages\\HomePage.js":"4","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\pages\\LoginPage.js":"5","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\pages\\SignupPage.js":"6","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\components\\MySkodaNavbar\\MySkodaNavbar.js":"7","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\pages\\MySkodaPage.js":"8","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\pages\\SignupLicensePage.js":"9","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\components\\MySkodaData\\MySkodaData.js":"10","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\models\\UserModel.js":"11","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\components\\MySkodaService\\MySkodaService.js":"12","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\components\\ServiceCalendar\\ServiceCalendar.js":"13","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\pages\\SheduleServicePage.js":"14","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\components\\MySkodaFooter\\MySkodaFooter.js":"15","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\components\\SheduleService\\SheduleService.js":"16"},{"size":500,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":3556,"mtime":1611952282306,"results":"20","hashOfConfig":"18"},{"size":1715,"mtime":1611868783185,"results":"21","hashOfConfig":"18"},{"size":5894,"mtime":1611868798287,"results":"22","hashOfConfig":"18"},{"size":5428,"mtime":1611946333351,"results":"23","hashOfConfig":"18"},{"size":1982,"mtime":1611869859580,"results":"24","hashOfConfig":"18"},{"size":2249,"mtime":1612087701464,"results":"25","hashOfConfig":"18"},{"size":3791,"mtime":1611938787376,"results":"26","hashOfConfig":"18"},{"size":9727,"mtime":1612087152998,"results":"27","hashOfConfig":"18"},{"size":268,"mtime":1611752869073,"results":"28","hashOfConfig":"18"},{"size":4186,"mtime":1612088333236,"results":"29","hashOfConfig":"18"},{"size":2031,"mtime":1611869326920,"results":"30","hashOfConfig":"18"},{"size":1013,"mtime":1611949983851,"results":"31","hashOfConfig":"18"},{"size":727,"mtime":1611868670810,"results":"32","hashOfConfig":"18"},{"size":15990,"mtime":1612062479624,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1io2muu",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"36"},"C:\\Users\\oxana\\Desktop\\my-skoda\\src\\index.js",[],["76","77"],"C:\\Users\\oxana\\Desktop\\my-skoda\\src\\reportWebVitals.js",[],"C:\\Users\\oxana\\Desktop\\my-skoda\\src\\App.js",["78"],"import './App.css';\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\n\n\nimport HomePage from './pages/HomePage';\nimport LoginPage from './pages/LoginPage';\nimport SignupPage from './pages/SignupPage';\nimport SignupLicensePage from './pages/SignupLicensePage';\nimport MySkodaPage from './pages/MySkodaPage';\nimport SheduleServicePage from './pages/SheduleServicePage';\n// import ServiceCalendarPage from './pages/ServiceCalendarPage';\n// import AppointmentPage from './pages/AppointmentPage';\nimport MySkodaNavbar from './components/MySkodaNavbar/MySkodaNavbar';\n// import vehicleJSON from './data/vehicle.json';\nimport Parse from 'parse';\nParse.serverURL = 'https://parseapi.back4app.com'; // This is your Server URL\n    Parse.initialize(\n      'Iwo7VyOadOaF4eiiOJjWPPRpYkypMvslH1TxL1Jq', // This is your Application ID\n      'eRJ2OisGhdgtimmV0E815KDSnEcmogdtUZqxFnc1' // This is your Javascript key\n    );\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userId: '',\n      userEmail: '',\n      userPwd: '',\n      activeUser: null,\n      isAdmin: false,\n      userCarPlate: '',\n      // userCarMake: '',\n      // userCarModel: '',\n      // userCarYear: '',\n      // userLastTest: '',\n      // userLastService: '',\n      // userServiceCenter: '',\n      // userServiceDate: ''\n    }\n    console.log(this.state);\n  }\n\n  handleLogin = (userObj) => {\n    this.setState({\n      activeUser: userObj\n    })\n  }\n\n  handleLogout = () => {\n    this.setState({\n      activeUser: null\n    })\n  }\n\n  handleCallbackUserEmail = (email) => {\n    this.setState({\n      userEmail: email\n    });\n    console.log(this.state);\n  }\n\n  handleCallbackUserCarPlate = (plate) => {\n    this.setState({\n      userCarPlate: plate\n    });\n    console.log(this.state);\n  }\n\n  handleCallbackUserPwd = (pwd) => {\n    this.setState({\n      userPwd: pwd\n    });\n    console.log(this.state);\n  }\n\n  render() {\n    return (\n          <HashRouter>\n            {/* <Route exact path={['/my-skoda', '/service-calendar', '/appointment']}> */}\n            {/* <Route exact path=\"/my-skoda\">\n              <MySkodaNavbar handleLogout={this.handleLogout} activeUser={this.state.activeUser}/>\n            </Route> */}\n              <Switch>\n                <Route exact path=\"/\">\n                  <HomePage />\n                </Route>\n                <Route exact path=\"/shedule\">\n                  <SheduleServicePage sendUserCarPlate={this.state.userCarPlate} />\n                </Route>\n                <Route exact path=\"/my-skoda\">\n                  <MySkodaPage sendUserCarPlate={this.state.userCarPlate} />\n                </Route>\n                <Route exact path=\"/signup-license\">\n                  <SignupLicensePage callbackUserCarPlate={this.handleCallbackUserCarPlate} callbackUserEmail={this.handleCallbackUserEmail}/>\n                </Route>\n                <Route exact path=\"/signup\">\n                  <SignupPage callbackUserPwd={this.handleCallbackUserPwd} sendUserEmail={this.state.userEmail} sendUserCarPlate={this.state.userCarPlate}/>\n                </Route>\n                <Route exact path=\"/login\">\n                  <LoginPage callbackUserEmail={this.handleCallbackUserEmail} sendUserEmail={this.state.userEmail} handleLogin={this.handleLogin} callbackUserCarPlate={this.handleCallbackUserCarPlate}/>\n                </Route>\n              </Switch> \n        </HashRouter>\n      )\n  }\n}\n\nexport default App;\n","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\pages\\HomePage.js",["79","80"],"import React from 'react';\r\nimport { Container, Col, Image, Row, Button, Nav } from 'react-bootstrap';\r\nimport './HomePage.css';\r\nimport MySkodaFooter from '../components/MySkodaFooter/MySkodaFooter';\r\n\r\nclass HomePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  handleClickOnHomeButton = () => {\r\n    window.location = '/#/login';\r\n    console.log('hi');\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"wrapper\">\r\n        <div className=\"main\">\r\n        <Container >\r\n         <Row>\r\n            <Col className=\"column column-aside\" xs={12} md={8}>\r\n              <span className=\"myskoda-home-label\">my<span className=\"letter-green\">Skoda</span></span>\r\n              <div className=\"wrap-home-img\">\r\n                <Image className=\"home-img\" src=\"img/skoda-black-logo.jpg\" rounded />\r\n              </div>\r\n              <h2 className=\"home-title\">The<br/>digital<br/>access<br/>to<br/>your<br/>Skoda\r\n              </h2>\r\n            </Col>\r\n            <Col className=\"column column-aside pt-5\" xs={12} md={4}>\r\n              <Image className=\"logo\" src=\"img/skoda-logo-min.png\" rounded />\r\n              <h4 className=\"home-subtitle\">Welcome to My Skoda!</h4>\r\n              <p className=\"home-text\">mySkoda gives you access to all the digital services from Skoda. Access important vehicle data, manage your data, and set up services.</p>\r\n              <Button className=\"home-button\" variant=\"success\" onClick={this.handleClickOnHomeButton}>Let's go<Image src=\"img/chevron-right.png\" /></Button>\r\n            </Col>\r\n            </Row>\r\n          </Container>\r\n          </div>\r\n          <MySkodaFooter />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default HomePage;","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\pages\\LoginPage.js",["81"],"import React from 'react';\r\nimport { Container, Button, Col, Image, Nav, Row, Form } from 'react-bootstrap';\r\nimport './LoginPage.css';\r\nimport MySkodaFooter from '../components/MySkodaFooter/MySkodaFooter';\r\n\r\n//solution with json\r\n// import usersJSON from '../data/users.json';\r\n\r\n//solution with back4you\r\nimport Parse from 'parse';\r\nimport UserModel from '../models/UserModel';\r\n\r\nclass LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userEmail: '',\r\n      userPwd: '',\r\n      userCarPlate: '',\r\n      type: \"password\",\r\n      offPwd: 'show',\r\n      onPwd: 'hide',\r\n      showAlert: true\r\n    }\r\n  }\r\n\r\n  showPassword = () => {\r\n    this.setState({\r\n      type: \"text\",\r\n      offPwd: 'hide',\r\n      onPwd: 'show'\r\n    })\r\n  }\r\n\r\n  hidePassword = () => {\r\n    this.setState({\r\n      type: \"password\",\r\n      offPwd: 'show',\r\n      onPwd: 'hide'\r\n    })\r\n  }\r\n\r\n  handleClickOnBackButton() {\r\n    window.location = '/';\r\n  }\r\n\r\n  //solution with json\r\n  // validateEmail = () => {\r\n  //     for(let i=0; i<usersJSON.length; i++) {\r\n  //       if(usersJSON[i].email === this.state.inputEmail) {\r\n  //         window.location = '/#/login';\r\n  //         return;\r\n  //     }\r\n  //     this.props.callbackUserEmail(this.state.inputEmail);\r\n  //   } \r\n  //     window.location = '/#/signup-license';\r\n  // }\r\n  \r\n  validatePassword = () => {\r\n    let userEmail = this.state.userEmail;\r\n    let userPwd = this.state.userPwd;\r\n    // Pass the username and password to logIn function\r\n    Parse.User.logIn(userEmail, userPwd).then((user) => {\r\n    // Do stuff after successful login\r\n    let carPlate = user.attributes.plateNumber;\r\n    this.setState({\r\n      userCarPlate: carPlate\r\n    })\r\n    this.props.callbackUserCarPlate(carPlate);\r\n    console.log(carPlate);\r\n    console.log('Logged in user', user);\r\n    this.props.handleLogin(new UserModel(user));\r\n    window.location = '/#/my-skoda';\r\n    }).catch(error => {\r\n      console.error('Error while logging in user', error);\r\n\r\n    // !!!write if user not exists(alert)\r\n\r\n    this.setState({\r\n        showAlert: false,\r\n        userEmail: '',\r\n        userPwd: ''\r\n    })\r\n\r\n    //!!!write validation RegEx for input email and imput password\r\n})\r\n  }\r\n\r\n  handleChangeInputPwd = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      userPwd: e.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeInputEmail = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      userEmail: e.target.value\r\n    });\r\n  }\r\n\r\n  handleClickOnCreateAccount () {\r\n    window.location = '/#/signup-license';\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"c-welcome-page\">\r\n        <div className=\"main\">\r\n        <Container>\r\n          <Row>\r\n            <Col className=\"column column-aside\" xs={12} md={4}>\r\n              <span className=\"myskoda-welcome-label\">my<span className=\"letter-green\">Skoda</span></span>\r\n              <h4 className=\"welcome-title\">Login</h4>\r\n              <p className=\"text\">for My Skoda</p>\r\n              <Form>\r\n                <Form.Group className=\"login-input\"controlId=\"formBasicEmail\">\r\n                  <Form.Label>Email address</Form.Label>\r\n                  <Form.Control type=\"email\" placeholder=\"Enter email\" value={this.state.userEmail} onChange={this.handleChangeInputEmail}/>\r\n                  <Form.Text className=\"text-muted\">\r\n                    Perfect\r\n                  </Form.Text>\r\n                </Form.Group>\r\n                <Form.Group className=\"login-input\" controlId=\"formBasicPassword\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <div className=\"input-password\">\r\n                    <Form.Control type={this.state.type} placeholder=\"Password\" onChange={this.handleChangeInputPwd} value={this.state.userPwd} />\r\n                    <Image className={`icon-eye-off ${this.state.offPwd}`} src=\"img/eye-off.png\" onClick={this.showPassword} />\r\n                    <Image className={`icon-eye ${this.state.onPwd}`}  src=\"img/eye.png\" onClick={this.hidePassword} />\r\n                  </div>\r\n                  <Form.Text className=\"text-muted\">\r\n                    Perfect\r\n                  </Form.Text>\r\n                </Form.Group>\r\n                <a className=\"login-link\" href=\"https://google.com\">Forgot password?</a>\r\n                  <div className=\"prev-next-buttons\">\r\n                  <Button className=\"login-button btn-prev\" variant=\"outline-success\" onClick={this.handleClickOnBackButton}>Back</Button>\r\n                  <Button className=\"login-button btn-next\" variant=\"success\" onClick={this.validatePassword} >Next\r\n                  </Button>\r\n                </div>\r\n                <div className=\"error-alert\" hidden={this.state.showAlert}>\r\n                <p className=\"alert-text\">Check email and password<br/><em>or</em><br/> <a href=\"/#/signup-license\">Create account</a></p>\r\n                  <button className=\"button-close\" onClick={() => this.setState({showAlert: true})} >\r\n                    &#215;  \r\n                  </button>\r\n                </div>\r\n                <a className=\"login-link\" href=\"https://google.com\">Don't have an account?</a>\r\n                <Button className=\"welcome-button\" variant=\"success\" onClick={this.handleClickOnCreateAccount}>Create account\r\n                </Button>\r\n              </Form>\r\n            </Col>\r\n            <Col className=\"column column-aside\" xs={12} md={8}>\r\n              <Image className=\"logo welcome-logo\" src=\"img/skoda-logo-min.png\" rounded />\r\n              <div className=\"wrap-welcome-img\">\r\n                <Image className=\"home-img\" src=\"img/skoda-welcome-martin-katlerI-unsplash-min.jpg\" rounded />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          </Container>\r\n          </div>\r\n           <MySkodaFooter />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default LoginPage;","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\pages\\SignupPage.js",["82"],"import React from 'react';\r\nimport { Container, Button, Col, Image, Nav, Row, Form } from 'react-bootstrap';\r\nimport './SignupPage.css';\r\nimport Parse from 'parse';\r\nimport MySkodaFooter from '../components/MySkodaFooter/MySkodaFooter';\r\n\r\nclass SignupPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      type: \"password\",\r\n      offPwd: 'show',\r\n      onPwd: 'hide',\r\n      newUserPwd: '',\r\n      confirmUserPwd: '',\r\n      showAlert: true\r\n    }\r\n  }\r\n\r\n  showPassword = () => {\r\n    this.setState({\r\n      type: \"text\",\r\n      offPwd: 'hide',\r\n      onPwd: 'show'\r\n    })\r\n  }\r\n\r\n  hidePassword = () => {\r\n    this.setState({\r\n      type: \"password\",\r\n      offPwd: 'show',\r\n      onPwd: 'hide'\r\n    })\r\n  }\r\n\r\n  handleClickOnBackButton() {\r\n    window.location = '/#/signup-license';\r\n  }\r\n\r\n  handleChangeInputPwd = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      newUserPwd: e.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeConfirmPwd = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      confirmUserPwd: e.target.value\r\n    });\r\n  }\r\n\r\n  isTheSameValue = () => {\r\n    let newUserPwd = this.state.newUserPwd.toString();\r\n    let confirmUserPwd = this.state.confirmUserPwd.toString();\r\n    if(newUserPwd === confirmUserPwd) {\r\n       window.location = '/#/my-skoda';\r\n      //  this.props.callbackUserPwd(this.state.newUserPwd);\r\n       this.signupUser();\r\n    }\r\n    this.setState({\r\n      showAlert: false,\r\n      newUserPwd: '',\r\n      confirmUserPwd: ''\r\n    })\r\n  }\r\n\r\n  signupUser = () => {\r\n    //!write condition if user or vehicle exist in database\r\n    console.log(this.state.sendUserCarPlate);\r\n    const user = new Parse.User()\r\n    user.set('username', this.props.sendUserEmail);\r\n    user.set('email', this.props.sendUserEmail);\r\n    user.set('password', this.state.newUserPwd);\r\n    user.set('plateNumber', this.props.sendUserCarPlate)\r\n\r\n    user.signUp().then((user) => {\r\n      \r\n      console.log('User signed up', user);\r\n    }).catch(error => {\r\n      \r\n      console.error('Error while signing up user', error);\r\n      //write if error alert\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"c-welcome-page\">\r\n        <div className=\"main\">\r\n        <Container>\r\n          <Row className=\"\">\r\n            <Col className=\"column column-aside\" xs={12} md={4}>\r\n              <div className=\"alert alert-warning alert-wrap\" role=\"alert\" hidden={this.state.showAlert}>\r\n                <p className=\"alert-text\">The fields are not the same</p>\r\n                  <button className=\"button-close\" onClick={() => this.setState({showAlert: true})} >\r\n                    &#215;  \r\n                  </button>\r\n              </div>\r\n              <span className=\"myskoda-welcome-label\">my<span className=\"letter-green\">Skoda</span></span>\r\n              <h4 className=\"welcome-title\">Create account</h4>\r\n              <span className=\"step\">Step 2</span>\r\n              <p className=\"text\">for My Skoda</p>\r\n              <Form>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <div className=\"input-password\">\r\n                    <Form.Control type={this.state.type} placeholder=\"Password\" onChange={this.handleChangeInputPwd} value={this.state.newUserPwd} />\r\n                    <Image className={`icon-eye-off ${this.state.offPwd}`} src=\"img/eye-off.png\" onClick={this.showPassword} />\r\n                    <Image className={`icon-eye ${this.state.onPwd}`}  src=\"img/eye.png\" onClick={this.hidePassword} />\r\n                  </div>\r\n                  <Form.Text className=\"text-muted\">\r\n                    Perfect\r\n                  </Form.Text>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Confirm password</Form.Label>\r\n                  <div className=\"input-password\">\r\n                    <Form.Control type={this.state.type} placeholder=\"Password\" onChange={this.handleChangeConfirmPwd} value={this.state.confirmUserPwd} />\r\n                    <Image className={`icon-eye-off ${this.state.offPwd}`} src=\"img/eye-off.png\" onClick={this.showPassword} />\r\n                    <Image className={`icon-eye ${this.state.onPwd}`}  src=\"img/eye.png\" onClick={this.hidePassword} />\r\n                  </div>\r\n                  <Form.Text className=\"text-muted\">\r\n                    Perfect\r\n                  </Form.Text>\r\n                </Form.Group>\r\n                <div className=\"prev-next-buttons\">\r\n                  <Button className=\"login-button btn-prev\" variant=\"outline-success\" onClick={this.handleClickOnBackButton}>Back</Button>\r\n                  <Button className=\"login-button btn-next\" variant=\"success\" onClick={this.isTheSameValue}>Next\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </Col>\r\n            <Col className=\"column column-aside\" xs={12} md={8}>\r\n              <Image className=\"logo welcome-logo\" src=\"img/skoda-logo-min.png\" rounded />\r\n              <div className=\"wrap-welcome-img\">\r\n                <Image className=\"home-img\" src=\"img/signup-kristian-valco-unsplash-min.jpg\" rounded />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          </Container>\r\n          </div>\r\n          <MySkodaFooter />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default SignupPage;","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\components\\MySkodaNavbar\\MySkodaNavbar.js",["83"],"import React from 'react';\r\nimport { Nav, Navbar, Container } from 'react-bootstrap';\r\nimport './MySkodaNavbar.css';\r\n\r\nclass MySkodaNavbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  logOut = () => {\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div class=\"myskoda-navbar\">\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"light\">\r\n          <Container>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link className=\"myskoda-label-link\" href=\"/\"><span className=\"myskoda-label\">my<span className=\"letter-green\">Skoda</span></span></Nav.Link>\r\n              <Navbar.Brand href=\"/\">\r\n                <img\r\n                  src=\"img/skoda-logo-min.png\"\r\n                  width=\"30\"\r\n                  height=\"30\"\r\n                  className=\"d-inline-block align-top\"\r\n                  alt=\"Skoda Logo\"\r\n                />\r\n              </Navbar.Brand>\r\n              <Nav.Link className=\"myskoda-nav-link\" href=\"#features\">Service Centers</Nav.Link>\r\n              <Nav.Link className=\"myskoda-nav-link\" href=\"#pricing\">Schedule Service</Nav.Link>\r\n            </Nav>\r\n            <Nav className=\"align-items-center\">\r\n              <Nav.Link className=\"myskoda-nav-link user-avatar-link d-flex align-items-center\" href=\"/\">\r\n                <span>Oxana</span>\r\n                <div className=\"wrap-user-avatar\">\r\n                  <img className=\"user-avatar\" src=\"https://via.placeholder.com/150/92c952\" />\r\n                </div>\r\n              </Nav.Link>\r\n              <Nav.Link className=\"myskoda-nav-link\" href=\"/\" onClick={this.logOut}>\r\n                LogOut\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MySkodaNavbar;","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\pages\\MySkodaPage.js",["84","85"],"C:\\Users\\oxana\\Desktop\\my-skoda\\src\\pages\\SignupLicensePage.js",["86","87"],"import React from 'react';\r\nimport { Container, Button, Col, Image, Nav, Row, Form } from 'react-bootstrap';\r\nimport './SignupLicensePage.css';\r\nimport MySkodaFooter from '../components/MySkodaFooter/MySkodaFooter';\r\n\r\nclass SignupLicensePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      licensePlate: '',\r\n      userEmail: ''\r\n    }\r\n  }\r\n\r\n  handleClickOnBackButton() {\r\n    window.location = '/#/login';\r\n  }\r\n\r\n  handleChangeInputPlate = (e) => {\r\n     e.preventDefault();\r\n     this.setState({\r\n       licensePlate: e.target.value\r\n     })\r\n  }\r\n\r\n   handleChangeInputEmail = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      userEmail: e.target.value\r\n    });\r\n  }\r\n  \r\n  getVehicle = async (e) => {\r\n    e.preventDefault();\r\n    let sentPlate = this.state.licensePlate;\r\n    let sentEmail = this.state.userEmail\r\n    const apiUrl = await fetch(`https://data.gov.il/api/3/action/datastore_search?resource_id=053cea08-09bc-40ec-8f7a-156f0677aff3&filters={%22mispar_rechev%22:[%22${sentPlate}%22]}`);\r\n\r\n    const data = await apiUrl.json();\r\n    console.log(data);\r\n    let receivedPlate = data.result.records[0].mispar_rechev;\r\n    if(receivedPlate == sentPlate) {\r\n      this.props.callbackUserCarPlate(sentPlate);\r\n      this.props.callbackUserEmail(sentEmail);\r\n      window.location = '/#/signup';\r\n    }\r\n    //!!write if this car plate not exists in database of data.gov.il (alert) + if this car plate exists in database back4app + validation input email RegEx (alert if not valid)\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"c-welcome-page\">\r\n        <div className=\"main\">\r\n        <Container>\r\n          <Row>\r\n            <Col className=\"column column-aside\" xs={12} md={4}>\r\n              <span className=\"myskoda-welcome-label\">my<span className=\"letter-green\">Skoda</span></span>\r\n              <h4 className=\"welcome-title\">Create account</h4>\r\n              <span className=\"step\">Step 1</span>\r\n              <p className=\"text\">for My Skoda</p>\r\n              <Form>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>License plate number</Form.Label>\r\n                  <Form.Control type=\"text\" placeholder=\"License plate number\" onChange={this.handleChangeInputPlate} />\r\n                  <Form.Text className=\"text-muted\">\r\n                    Perfect\r\n                  </Form.Text>\r\n                </Form.Group>\r\n                <Form.Group className=\"login-input\"controlId=\"formBasicEmail\">\r\n                  <Form.Label>Email address</Form.Label>\r\n                  <Form.Control type=\"email\" placeholder=\"Enter email\" value={this.state.userEmail} onChange={this.handleChangeInputEmail}/>\r\n                  <Form.Text className=\"text-muted\">\r\n                    Perfect\r\n                  </Form.Text>\r\n                </Form.Group>\r\n                <div className=\"prev-next-buttons\">\r\n                  <Button className=\"login-button btn-prev\" variant=\"outline-success\" onClick={this.handleClickOnBackButton}>Back</Button>\r\n                  <Button className=\"login-button btn-next\" variant=\"success\" onClick={this.getVehicle}>Next\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </Col>\r\n            <Col className=\"column column-aside\" xs={12} md={8}>\r\n              <Image className=\"logo welcome-logo\" src=\"img/skoda-logo-min.png\" rounded />\r\n              <div className=\"wrap-welcome-img\">\r\n                <Image className=\"home-img\" src=\"img/signup-kristian-valco-unsplash-min.jpg\" rounded />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          </Container>\r\n          </div>\r\n          <MySkodaFooter />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default SignupLicensePage;","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\components\\MySkodaData\\MySkodaData.js",["88"],"C:\\Users\\oxana\\Desktop\\my-skoda\\src\\models\\UserModel.js",[],"C:\\Users\\oxana\\Desktop\\my-skoda\\src\\components\\MySkodaService\\MySkodaService.js",[],"C:\\Users\\oxana\\Desktop\\my-skoda\\src\\components\\ServiceCalendar\\ServiceCalendar.js",["89","90"],"import './ServiceCalendar.css';\r\nimport React from 'react';\r\nimport { Col } from 'react-bootstrap';\r\nimport servicesJSON from '../../data/services.json';\r\nimport moment from 'moment';\r\n// import 'animate.css/animate.css';\r\n// import Animate from 'animate.css-react';\r\n\r\n\r\nclass ServiceCalendar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const table = servicesJSON;\r\n    console.log(table);\r\n    \r\n    const sortedTable = table.sort((a, b) => {\r\n      let dateA=new Date(a.recommended.split(\"/\").reverse().join(\"-\")), dateB=new Date(b.recommended.split(\"/\").reverse().join(\"-\"))\r\n      return dateA-dateB\r\n    });\r\n    console.log(sortedTable);\r\n    const newTable = sortedTable.map((service) => {\r\n        return (\r\n          <tr>\r\n            <th className=\"service-cell\"><small>recommended</small><br/>{service.recommended}</th>\r\n            <td className=\"service-cell\">{service.service}</td>\r\n            <td className=\"service-cell\"><small>shedule</small><br/><a className=\"shedule-link\" href=\"/#/shedule\">{service.shedule}</a></td>\r\n          </tr>\r\n        )\r\n    })\r\n\r\n    return(\r\n     <div class=\"c-myskoda-service\">\r\n        <h1 className=\"display-4 myskoda-title\" onClick={this.sortDates}>Service Calendar</h1>\r\n        <Col className=\"column\" xs={12} md={4}>\r\n              <p class=\"text-regular\">Keep Your Skoda At Its Best with Our Service</p>\r\n              <span className=\"text-small\">Scheduled maintenance can saving you lots in the long run</span>\r\n              <table class=\"table table-success table-striped table-bordered\" style={{ width: '397px' }}>\r\n                <tr className=\"table-secondary\">\r\n                    <th className=\"service-cell\" scope=\"row\">Visit</th>\r\n                    <th className=\"service-cell\">Service</th>\r\n                    <th className=\"service-cell\">Shedule</th>\r\n                  </tr>\r\n                {newTable}\r\n              </table>\r\n        </Col>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default ServiceCalendar;","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\pages\\SheduleServicePage.js",[],"C:\\Users\\oxana\\Desktop\\my-skoda\\src\\components\\MySkodaFooter\\MySkodaFooter.js",["91"],"// import '/MySkodaFooter.css';\r\nimport React from 'react';\r\nimport { Container, Nav } from 'react-bootstrap';\r\n\r\nclass MySkodaFooter extends React.Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n  render() {\r\n    return(\r\n      <div className=\"footer\">\r\n            <Container>\r\n            <Nav className=\"footer-nav\" as=\"ul\">\r\n              <Nav.Item as=\"li\">\r\n                <Nav.Link className=\"footer-link\" href=\"#\">Terms of use</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item as=\"li\">\r\n                <Nav.Link className=\"footer-link\" href=\"#\">Contacts</Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n            </Container>\r\n          </div>\r\n    )\r\n  }\r\n}\r\nexport default MySkodaFooter;","C:\\Users\\oxana\\Desktop\\my-skoda\\src\\components\\SheduleService\\SheduleService.js",["92","93"],"import './SheduleService.css';\r\nimport React from 'react';\r\nimport { Col } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport DatePicker from \"react-datepicker\";\r\nimport subDays from 'date-fns/subDays';\r\nimport getDay from 'date-fns/getDay';\r\nimport setHours from 'date-fns/setHours';\r\nimport setMinutes from 'date-fns/setMinutes';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport styled from \"styled-components\";\r\nimport Parse from 'parse';\r\n\r\nconst Styles = styled.div`\r\n.react-datepicker__input-container input,\r\n.react-datepicker__input-container,\r\n.react-datepicker-wrapper {\r\n  width: 290px;\r\n  height: 38px;\r\n  margin-bottom: 30px;\r\n}\r\n .react-datepicker__close-icon::before,\r\n .react-datepicker__close-icon::after {\r\n    background-color: #28a745;\r\n }\r\n .react-datepicker__time-container,\r\n .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\r\n   width: 240px;\r\n }\r\n .react-datepicker__day--keyboard-selected,\r\n .react-datepicker__day--selected {\r\n    background-color: #218838;\r\n }\r\n .react-datepicker__day--keyboard-selected:hover,\r\n .react-datepicker__day--selected:hover {\r\n    background-color: #218838;\r\n }\r\n .react-datepicker__day--keyboard-selected:focus,\r\n .react-datepicker__day--selected:focus {\r\n    outline: none;\r\n }\r\n .react-datepicker__header {\r\n    background-color: rgb(41, 168, 71, 0.2);\r\n }\r\n .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list li.react-datepicker__time-list-item--selected {\r\n   background-color: #218838;\r\n }\r\n .react-datepicker__time-container:hover .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list li.react-datepicker__time-list-item--selected {\r\n   background-color: #218838;\r\n }\r\n .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list li.react-datepicker__time-list-item--selected,\r\n .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list li.react-datepicker__time-list-item\r\n {\r\n   height: 50px;\r\n   display: flex;\r\n   align-items: center;\r\n   justify-content: center;\r\n }\r\n`;\r\n\r\nclass SheduleService extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // console.log(this.props);\r\n    this.state = {\r\n        // carPlate: '',\r\n        carMake: '',\r\n        carModel: '',\r\n        carYear: '',\r\n        carLastTest: '',\r\n        carLastService: '',\r\n        startDate: setHours(setMinutes(new Date(), 0), 8),\r\n        excludeDates: [],\r\n        excludeTimes: []\r\n      }\r\n  }\r\n\r\n  componentDidMount () {\r\n    let plate = this.props.sendUserCarPlate;\r\n    // console.log(plate);\r\n    axios.get(`https://data.gov.il/api/3/action/datastore_search?resource_id=053cea08-09bc-40ec-8f7a-156f0677aff3&filters={%22mispar_rechev%22:[%22${plate}%22]}`)\r\n    .then((result) => {\r\n      let data = result.data.result.records[0];\r\n      // console.log(data);\r\n      let make = data.tozeret_nm;\r\n      if(make === `סקודה צ'כיה`) {\r\n        make = \"Skoda\"\r\n      }\r\n      let model = data.kinuy_mishari;\r\n      let year = data.shnat_yitzur;\r\n      let test = moment(data.mivchan_acharon_dt).format('L');\r\n      // console.log(make, model, year, test);\r\n      this.setState({\r\n        carPlate: plate,\r\n        carMake: make,\r\n        carModel: model,\r\n        carYear: year,\r\n        carLastTest: test,\r\n        email: '',\r\n        phone: ''\r\n      })\r\n      // console.log(this.state);\r\n    })\r\n\r\n    const Vehicle = Parse.Object.extend('Vehicle');\r\n    const query = new Parse.Query(Vehicle);\r\n    // query.equalTo(\"lastService\", 'A string');\r\n    // query.equalTo(\"sheduledDate\", 'A string');\r\n    query.equalTo(\"userId\", Parse.User.current());\r\n    query.find().then((results) => {\r\n      \r\n      // console.log('Vehicle found', results);\r\n      // console.log(results[results.length-1].attributes.lastService);\r\n      // console.log(results[results.length-1].attributes.sheduledDate);\r\n      const lastService = results[results.length-1].attributes.lastService;\r\n      const exDate = results[results.length-1].attributes.sheduledDate\r\n      this.setState({\r\n        carLastService: lastService,\r\n        excludeDates: exDate\r\n      })\r\n    }, (error) => {\r\n      \r\n      console.error('Error while fetching Vehicle', error);\r\n    });\r\n    \r\n  }\r\n\r\n  handleChangeInputEmail = (e) => {\r\n    this.setState({\r\n      email: e.target.value\r\n    })\r\n  } \r\n  handleChangeInputPhone = (e) => {\r\n    this.setState({\r\n      phone: e.target.value\r\n    })\r\n  }\r\n\r\n  handleChange = date => {\r\n    this.setState({\r\n      startDate: date\r\n    });\r\n    console.log(this.state.startDate);\r\n  }\r\n\r\n  handleSelect = (date, event) => {\r\n    console.log('onSelect', date, event);\r\n    if(moment(date).format('YYYY/MM/DD') === moment('Thu Feb 04 2021 08:00:13 GMT+0200 (Israel Standard Time').format('YYYY/MM/DD')) {\r\n      console.log('yes');\r\n    }\r\n    const selectedDate = moment(date).format('YYYY/MM/DD');\r\n    console.log(selectedDate);\r\n    const transDate = moment(selectedDate).toObject();\r\n    console.log(transDate);\r\n\r\n    const Vehicle = Parse.Object.extend('Vehicle');\r\n    const query = new Parse.Query(Vehicle);\r\n    // query.equalTo(\"lastService\", 'A string');\r\n    // query.equalTo(\"sheduledDate\", 'A string');\r\n    query.equalTo(\"userId\", Parse.User.current());\r\n    query.find().then((results) => {\r\n      \r\n      const exDate = results[results.length-1].attributes.sheduledDate;\r\n      console.log(moment(exDate).format('YYYY/MM/DD'));\r\n      if (moment(exDate).format('YYYY/MM/DD') === '2021/02/04') {\r\n        console.log('!!!');\r\n        const arrExDates = [];\r\n        arrExDates.push(moment(exDate).format('hh:mm'))\r\n        console.log(arrExDates);\r\n        this.setState({\r\n          excludeTimes: arrExDates\r\n        })\r\n      }\r\n\r\n    }, (error) => {\r\n      \r\n      console.error('Error while fetching Vehicle', error);\r\n    });\r\n  }\r\n\r\n  // handleFocus = (event) => {\r\n  //       console.log('onFocus', event.nativeEvent.path[0].defaultValue);\r\n  // }\r\n\r\n  // handleCalendarClose = (e) => {\r\n  //       console.log('CalendarClose', e);\r\n  // }\r\n\r\n  handleClickOnButtonSubmit = (e) => {\r\n    \r\n    e.preventDefault();\r\n    console.log(this.state.startDate);\r\n    const Vehicle = Parse.Object.extend('Vehicle');\r\n    const myNewObject = new Vehicle();\r\n\r\n    myNewObject.set('lastService', '12/07/2020');\r\n    myNewObject.set('sheduledDate', this.state.startDate.toString());\r\n    myNewObject.set('userId', Parse.User.current());\r\n\r\n    myNewObject.save().then(\r\n      (result) => {\r\n        \r\n        console.log('Vehicle created', result);\r\n      },\r\n      (error) => {\r\n        \r\n        console.error('Error while creating Vehicle: ', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  // isWeekday = date => {\r\n  //   const day = getDay(date);\r\n  //   return day !== 0 && day !== 6;\r\n  // };\r\n\r\n  // filterPassedTime = time => {\r\n  //   const currentDate = new Date();\r\n  //   const selectedDate = new Date(time);\r\n  //   return currentDate.getTime() < selectedDate.getTime();\r\n  // }\r\n\r\n  render() {\r\n    const { startDate } = this.state;\r\n    const formExDate = moment( Date.parse(this.state.excludeDates)).toObject();\r\n    // console.log(formExDate);\r\n    const exDate = setHours(setMinutes(new Date(formExDate.years, formExDate.months, formExDate.date), formExDate.minutes), formExDate.hours);\r\n    // console.log(exDate);\r\n    return(\r\n      <div>\r\n        <h1 className=\"display-4 myskoda-title\">Shedule Service Appointment</h1>\r\n        <p className=\"text-regular text-bg last\">your last annual vehicle licensing test: <strong>{this.state.carLastTest}</strong></p>\r\n        <p className=\"text-regular text-bg last\">your last multi-point inspection: <strong>{this.state.carLastService}</strong></p>\r\n        <Col className=\"column\" xs={12} md={4}>\r\n          <form class=\"row g-3 shedule-form\">\r\n          \r\n            <div class=\"col-md-6\">\r\n              <label for=\"validationServer01\" class=\"form-label\">PlateNumber</label>\r\n              <input type=\"text\" class=\"form-control is-valid\" id=\"validationServer01\" value={this.props.sendUserCarPlate} required disabled/>\r\n              {/* <div class=\"valid-feedback\">\r\n                Looks good!\r\n              </div> */}\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <label for=\"validationServer02\" class=\"form-label\">Model</label>\r\n              <input type=\"text\" class=\"form-control is-valid\" id=\"validationServer02\" value={this.state.carModel} required />\r\n              {/* <div class=\"valid-feedback\">\r\n                Looks good!\r\n              </div> */}\r\n            </div>\r\n\r\n            <div class=\"col-md-12\">\r\n              <label for=\"validationServer04\" class=\"form-label shedule-label\">Dealer</label>\r\n              <select class=\"form-select shedule-select is-invalid\" id=\"validationServer04\" aria-describedby=\"validationServer04Feedback\" required>\r\n                <option selected disabled value=\"\">Choose dealer</option>\r\n                <option>Felix Oficial Dealer Tel-Aviv</option>\r\n                <option>HaGoren Oficial Dealer Nataniya</option>\r\n                <option>MotorUp Oficial Dealer Petach-Tikva</option>\r\n              </select>\r\n              <div id=\"validationServer04Feedback\" class=\"invalid-feedback\">\r\n                Please select a valid state.\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-12\">\r\n              <label for=\"validationServer04\" class=\"form-label shedule-label\">Service</label>\r\n              <select class=\"form-select shedule-select is-invalid\" id=\"validationServer04\" aria-describedby=\"validationServer04Feedback\" required>\r\n                <option selected disabled value=\"\">Choose services</option>\r\n                <option>Inspection Before Annual Vehicle Licensing Test</option>\r\n                <option>Multi-Point Inspection</option>\r\n                <option>Full service</option>\r\n                <option>Inspection before summer</option>\r\n                <option>Inspection before winter</option>\r\n              </select>\r\n              <div id=\"validationServer04Feedback\" class=\"invalid-feedback\">\r\n                Please select a valid state.\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-12\">\r\n              <p className=\"mt-2\">Select Date and Time</p>\r\n              <Styles>\r\n                <DatePicker\r\n                isClearable\r\n                selected={startDate}\r\n                onChange={this.handleChange}\r\n                onSelect={this.handleSelect}\r\n                // onFocus={this.handleFocus}\r\n                // onCalendarClose={this.handleCalendarClose}\r\n                placeholderText=\"Select Date and Time\"\r\n                popperPlacement=\"right-start\"\r\n                popperModifiers={{\r\n                  offset: {\r\n                    enabled: true,\r\n                    offset: \"5px, 10px\"\r\n                  },\r\n                  preventOverflow: {\r\n                    enabled: true,\r\n                    escapeWithReference: false,\r\n                    boundariesElement: \"viewport\"\r\n                  }\r\n                }}\r\n                // showTimeSelect\r\n                // timeIntervals={15}\r\n                // timeFormat=\"HH:mm\"\r\n                // withPortal\r\n                dateFormat=\"dd/MM/yyy\"\r\n                minDate={new Date()}\r\n                // onCalendarClose={this.handleCalendarClose}\r\n                // onCalendarOpen={handleCalendarOpen}\r\n                // excludeDates={[new Date(), subDays(new Date(), 1)]}\r\n                // excludeOutOfBoundTimes\r\n                excludeDates={[this.state.excludeTimes]}\r\n                // excludeTimes={[\r\n                //   setHours(setMinutes(new Date(2021, 2, 12), 15), 8),\r\n                //   setHours(setMinutes(new Date(2021, 3, 15), 15), 9),\r\n                //   setHours(setMinutes(new Date(2021, 4, 25), 15), 10),\r\n                //   setHours(setMinutes(new Date(2021, 5, 14), 15), 11)\r\n                // ]}\r\n                // excludeTimes={[exDate]}\r\n                // filterDate={this.isWeekday}\r\n                // filterTime={this.filterPassedTime}\r\n                // minTime={setHours(setMinutes(new Date(), 0), 8)}\r\n                // maxTime={setHours(setMinutes(new Date(), 45), 14)}\r\n              />\r\n              <DatePicker\r\n                isClearable\r\n                selected={startDate}\r\n                onChange={this.handleChange}\r\n                onSelect={this.handleSelect}\r\n                // onFocus={this.handleFocus}\r\n                // onCalendarClose={this.handleCalendarClose}\r\n                placeholderText=\"Select Date and Time\"\r\n                popperPlacement=\"right-start\"\r\n                popperModifiers={{\r\n                  offset: {\r\n                    enabled: true,\r\n                    offset: \"0px, 10px\"\r\n                  },\r\n                  preventOverflow: {\r\n                    enabled: true,\r\n                    escapeWithReference: false,\r\n                    boundariesElement: \"viewport\"\r\n                  }\r\n                }}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                timeIntervals={15}\r\n                timeFormat=\"HH:mm\"\r\n                // withPortal\r\n                dateFormat=\"hh:mm aa\"\r\n                minDate={new Date()}\r\n                // onCalendarClose={this.handleCalendarClose}\r\n                // onCalendarOpen={handleCalendarOpen}\r\n                // excludeDates={[new Date(), subDays(new Date(), 1)]}\r\n                // excludeOutOfBoundTimes\r\n                // excludeDates={[exDate]}\r\n                // excludeTimes={[\r\n                //   setHours(setMinutes(new Date(2021, 2, 12), 15), 8),\r\n                //   setHours(setMinutes(new Date(2021, 3, 15), 15), 9),\r\n                //   setHours(setMinutes(new Date(2021, 4, 25), 15), 10),\r\n                //   setHours(setMinutes(new Date(2021, 5, 14), 15), 11)\r\n                // ]}\r\n                excludeTimes={[exDate]}\r\n                // filterDate={this.isWeekday}\r\n                // filterTime={this.filterPassedTime}\r\n                minTime={setHours(setMinutes(new Date(), 0), 8)}\r\n                maxTime={setHours(setMinutes(new Date(), 45), 14)}\r\n              />\r\n              </Styles>\r\n            </div>\r\n\r\n            <div class=\"col-md-12\">\r\n              <label for=\"validationServer03\" class=\"col-2 col-form-label pl-0 pt-0\">Email</label>\r\n              <div class=\"col-10 pl-0\">\r\n                <input class=\"form-control is-invalid\" type=\"email\" placeholder=\"example@example.com\" onChange={this.handleChangeInputEmail} value={this.state.email} id=\"validationServer03\" aria-describedby=\"validationServer03Feedback\" required/>\r\n                <div id=\"validationServer03Feedback\" class=\"invalid-feedback\">\r\n                Please provide a valid email.\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-12\">\r\n              <label for=\"validationServer03\" class=\"col-2 col-form-label pl-0\">Telephone</label>\r\n              <div class=\"col-10 pl-0\">\r\n                <input class=\"form-control is-invalid\" type=\"tel\" placeholder=\"000-000-0000\" onChange={this.handleChangeInputPhone} value={this.state.phone} id=\"validationServer03\" aria-describedby=\"validationServer03Feedback\" required/>\r\n                <div id=\"validationServer03Feedback\" class=\"invalid-feedback\">\r\n                Please provide a valid telephone.\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            \r\n            <div class=\"col-12\">\r\n              <button class=\"btn btn-primary shedule-submit my-4\" type=\"submit\" onClick={this.handleClickOnButtonSubmit}>Submit form</button>\r\n            </div>\r\n          </form> \r\n        </Col>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default SheduleService;",{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":16,"column":8,"nodeType":"100","messageId":"101","endLine":16,"endColumn":21},{"ruleId":"98","severity":1,"message":"102","line":2,"column":46,"nodeType":"100","messageId":"101","endLine":2,"endColumn":49},{"ruleId":"103","severity":1,"message":"104","line":7,"column":3,"nodeType":"105","messageId":"106","endLine":9,"endColumn":4},{"ruleId":"98","severity":1,"message":"102","line":2,"column":41,"nodeType":"100","messageId":"101","endLine":2,"endColumn":44},{"ruleId":"98","severity":1,"message":"102","line":2,"column":41,"nodeType":"100","messageId":"101","endLine":2,"endColumn":44},{"ruleId":"107","severity":1,"message":"108","line":44,"column":19,"nodeType":"109","endLine":44,"endColumn":95},{"ruleId":"98","severity":1,"message":"102","line":3,"column":21,"nodeType":"100","messageId":"101","endLine":3,"endColumn":24},{"ruleId":"98","severity":1,"message":"110","line":9,"column":8,"nodeType":"100","messageId":"101","endLine":9,"endColumn":13},{"ruleId":"98","severity":1,"message":"102","line":2,"column":41,"nodeType":"100","messageId":"101","endLine":2,"endColumn":44},{"ruleId":"111","severity":1,"message":"112","line":42,"column":22,"nodeType":"113","messageId":"114","endLine":42,"endColumn":24},{"ruleId":"98","severity":1,"message":"115","line":5,"column":15,"nodeType":"100","messageId":"101","endLine":5,"endColumn":20},{"ruleId":"98","severity":1,"message":"116","line":5,"column":8,"nodeType":"100","messageId":"101","endLine":5,"endColumn":14},{"ruleId":"103","severity":1,"message":"104","line":11,"column":3,"nodeType":"105","messageId":"106","endLine":13,"endColumn":4},{"ruleId":"103","severity":1,"message":"104","line":6,"column":3,"nodeType":"105","messageId":"106","endLine":8,"endColumn":4},{"ruleId":"98","severity":1,"message":"117","line":7,"column":8,"nodeType":"100","messageId":"101","endLine":7,"endColumn":15},{"ruleId":"98","severity":1,"message":"118","line":8,"column":8,"nodeType":"100","messageId":"101","endLine":8,"endColumn":14},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'MySkodaNavbar' is defined but never used.","Identifier","unusedVar","'Nav' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Parse' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Image' is defined but never used.","'moment' is defined but never used.","'subDays' is defined but never used.","'getDay' is defined but never used.","no-global-assign","no-unsafe-negation"]